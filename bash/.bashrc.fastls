# .bashrc.fastls
#
# Make ls faster by detecting the network-based filesystems, and by
# excluding orphan-coloring from LS_COLORS
#
# Written in 2003-2016 by Aron Griffis <aron@arongriffis.com>
#
# To the extent possible under law, the author(s) have dedicated all copyright
# and related and neighboring rights to this software to the public domain
# worldwide. This software is distributed without any warranty.
#
# CC0 Public Domain Dedication at
# http://creativecommons.org/publicdomain/zero/1.0/
#======================================================================

[[ -n $_BASHRC_FASTLS ]] && return
_BASHRC_FASTLS=1

source ~/.bashrc.funcs  # for isnfs()

# remove the Red Hat default alias,
# otherwise setting the 'ls' function will be an error
unalias ls 2>/dev/null

# FAST ls
#
# The point of this is to speed up ls on NFS-mounted directories.
# When colorized ls is used, then ls needs to do a stat on each file,
# so on large NFS-mounted directories, don't use color.
#
# We just key off the last file in the list, so this could be faked
# out, but it works as we expect most of the time.
ls() {
  declare num=0 lsflags thisdir ls="command ls"
  [[ $# -gt 0 && ${!#} != -* ]] && thisdir=${!#} || thisdir=.

  # Check how many entries in the requested directory
  if isnfs "$thisdir"; then
    num=`$ls "${LS_FLAGS[@]}" "$thisdir" 2>/dev/null | head -n 201 | wc -l`
  fi

  # Should we use -F and color?
  if (( $num > 100 )); then
    lsflags=''
  elif lsver=`$ls --version 2>/dev/null`; then
    # Add color and human-readable opts for GNU ls
    if [[ $lsver == *coreutils* ]]; then
      lsflags='-p --color=tty -h'
    else
      lsflags='-p --color=tty'
    fi
    [[ -z "$LS_COLORS" ]] && set_ls_colors
  else
    lsflags='-F'
  fi

  # Is this our home directory?  If not, use -A to show dot-files
  if [[ ! $thisdir -ef ~ ]]; then
    lsflags="$lsflags -A"
  fi

  # Finally, run ls!
  $ls $lsflags "${LS_FLAGS[@]}" "$@"
}

# Set up LS_COLORS
set_ls_colors() {
  if type -P dircolors &>/dev/null; then
    if [[ ! -r ~/.dir_colors ]]; then
      # Make sure LS_COLORS is set so that there's no specific coloring
      # for orphans.  When using the default ORPHAN setting, ls stats the
      # target of every symlink, which causes automounting to go nuts (and
      # take forever)
      # 
      # Also remove all annoying background color settings
      { cat /etc/DIR_COLORS 2>/dev/null || dircolors -p; } | \
      sed '/^ORPHAN/d; s/;4[0-9];//g; s/;*\<4[0-9]\>;*//g' > ~/.dir_colors
    fi

    # Load up the settings
    eval "$(dircolors ~/.dir_colors)"
  else
    # Snapshot of LS_COLORS, starting with DIR_COLORS on Gentoo and
    # using above modification.
    export LS_COLORS='no=00:fi=00:di=01;34:ln=01;36:pi=33:so=01;35:do=01;35:bd=33;01:cd=33;01:mi=01;05;37:ex=01;32:*.cmd=01;32:*.exe=01;32:*.com=01;32:*.btm=01;32:*.bat=01;32:*.sh=01;32:*.csh=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.gz=01;31:*.bz2=01;31:*.bz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.rar=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.mng=01;35:*.xcf=01;35:*.pcx=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.avi=01;35:*.mkv=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.mov=01;35:*.qt=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.fli=01;35:*.gl=01;35:*.dl=01;35:*.pdf=00;32:*.ps=00;32:*.txt=00;32:*.log=00;32:*.tex=00;32:*.doc=00;32:*.mp3=00;36:*.wav=00;36:*.mid=00;36:*.midi=00;36:*.au=00;36:*.ogg=00;36:'
  fi
}

#======================================================================
# The following lines enforce a consistent indentation for this file.
# Keep this comment at the end of file.
#
# Local Variables:
# mode: shell-script
# sh-basic-offset: 2
# sh-indentation: 2
# evil-shift-width: 2
# indent-tabs-mode: nil
# End:
#
# vim:shiftwidth=2 expandtab smarttab filetype=sh
