# bashrc.term
#
# Functions for setting the TERM environment variable.
#
# Written in 2003-2016 by Aron Griffis <aron@arongriffis.com>
#
# To the extent possible under law, the author(s) have dedicated all copyright
# and related and neighboring rights to this software to the public domain
# worldwide. This software is distributed without any warranty.
#
# CC0 Public Domain Dedication at
# http://creativecommons.org/publicdomain/zero/1.0/
#======================================================================

setup-TERM() {
  # vte-256color messes up emacs with solarized, so use xterm-256color
  # instead.
  declare vte=xterm-256color
  declare -a terms

  case $TERM:$COLORTERM in
    ansi:*)
      # probably Windows telnet
      TERM=vt100 ;;

    screen*|tmux*:*)
      # leave it alone! don't trip on the following vte checks
      ;;

    *:roxterm|xterm:)
      if [[ $ROXTERM_PID == "$PPID" ]]; then
        TERM=$vte
      elif [[ -e /etc/crouton ]]; then
        # https://groups.google.com/a/chromium.org/forum/#!topic/chromium-hterm/2EmfR2Mac88
        TERM=xterm-256color
      elif [[ $(xargs -0 < /proc/$PPID/cmdline) == *gnome-terminal* ]] 2>/dev/null; then
        # gnome-terminal stopped setting COLORTERM=gnome-terminal
        # https://github.com/GNOME/gnome-terminal/commit/1d5c1b6ca6373c1301494edbc9e43c3e6a9c9aaf
        TERM=$vte
      fi
      ;;

    *:Terminal|*:gnome-terminal)
      TERM=$vte ;;
  esac

  case $TERM in
    alacritty)
      terms=("$TERM" xterm-256color xterm) ;;
    rxvt-*)
      terms=("$TERM" rxvt xterm) ;;
    ghostty|xterm-ghostty)
      terms=(ghostty xterm-ghostty xterm-256color xterm) ;;
    xterm-256color|xterm-kitty)
      terms=("$TERM" xterm-256color xterm) ;;
    screen*)
      terms=(screen-256color "$TERM" screen) ;;
    tmux*)
      terms=(tmux-256color screen-256color "$TERM" tmux screen) ;;
  esac

  if [[ -n $terms ]]; then
    # toe on gentoo searches only /usr/share/terminfo.
    # toe on debian/unbuntu searches only ~/.terminfo and /etc/terminfo.
    # both appear to be broken, so we search explicitly.
    declare -a toes
    toes=($(
      for d in ~/.terminfo ~/.local/share/terminfo /etc/terminfo /lib/terminfo /usr/share/terminfo; do
        [[ -d $d ]] && toe "$d"
      done | awk '{print $1}'
    ))
    for term in "${terms[@]}"; do
      for toe in "${toes[@]}"; do
        if [[ $term == "$toe" ]]; then
          TERM=$term
          return
        fi
      done
    done
  fi
}

setup-TERM

unset -f setup-TERM

#======================================================================
# The following lines enforce a consistent indentation for this file.
# Keep this comment at the end of file.
#
# Local Variables:
# mode: shell-script
# sh-basic-offset: 2
# sh-indentation: 2
# evil-shift-width: 2
# indent-tabs-mode: nil
# End:
#
# vim:shiftwidth=2 expandtab smarttab filetype=sh
