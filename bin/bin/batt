#!/bin/bash

setvars() {
    unset present
    eval "$(sed -e 's/: */=/; s/ [^=]*$//; s/ /_/g' $b/state $b/info)" 2>/dev/null
    case ${b##*/} in
        BAT0) b=primary ;;  # n620c
        BAT1) b=multibay ;; # n620c
        C23A) b=extra ;;    # 6510b
        C23B) b=primary ;;  # 6510b
        *) b=${b##*/} ;;
    esac
}

for b in /proc/acpi/battery/*; do
    setvars $b
    if (( present_rate > 0 )); then
        (( overall_rate = present_rate ))
        (( reference_voltage = present_voltage ))
    fi
done

for b in /proc/acpi/battery/*; do
    setvars $b
    if [[ $present == yes ]]; then
        barchar='#'
        if [[ $charging_state == charg* ]]; then
            if (( present_rate > 0 )); then
                (( time_estimate = 60 * (last_full_capacity - remaining_capacity) / present_rate ))
                [[ $charging_state == charging ]] && barchar='>'
            fi
            if (( remaining_capacity == 0 )); then
                charging_state=discharged
            fi
        elif [[ $charging_state == discharging ]]; then
            if (( present_rate > 0 )); then
                (( time_estimate = 60 * remaining_capacity / present_rate ))
            fi
            barchar='<'
        elif [[ $charging_state == unknown ]]; then
            (( time_estimate = 0 ))
        else
            printf "%s: charging state is %s\n" $b $charging_state
            continue
        fi
        printf "%s: %d of %d mAh, %s" \
            $b $remaining_capacity $last_full_capacity \
            $charging_state
        if (( present_rate > 0 )); then
            printf " at a rate of %d mW (%d:%02d)" \
            $present_rate $(( time_estimate / 60 )) $(( time_estimate % 60 ))
        fi
        # create the bar graph
        printf "\n[%$(( remaining_capacity * 50 / last_full_capacity ))s" '' | \
            tr ' ' "$barchar"
        printf "%$(( 50 - remaining_capacity * 50 / last_full_capacity ))s]" '' | \
            tr ' ' .
        printf " %d%%\n" $(( remaining_capacity * 100 / last_full_capacity ))
    fi
done
