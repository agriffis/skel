#!/bin/bash
#
# This wrapper for mutt parses off defines and undefines so they can be passed
# to m4 from mutt_conf.  It also conditionally adds -DAT_HP, -DOFFLINE, and runs
# mutt under socksify.

#----------------------------------------------------------------------
# 0. find the wrapped binary
#----------------------------------------------------------------------

[[ -n $MUTT ]] || MUTT=$(wrapped "$0") || exit 1
export MUTT

#----------------------------------------------------------------------
# 1. build the defs array based on...
#----------------------------------------------------------------------

declare -a args defs

# 1.1. MUTT_DEFS (set in .bashrc.mine)
eval "defs=( \"\${defs[@]}\" $MUTT_DEFS )"

# 1.2. extract defs/undefs from the command-line
for x; do
    case $x in
        -[DU]?*) defs=( "${defs[@]}" "$x" ) ;;
        *)       args=( "${args[@]}" "$x" ) ;;
    esac
done
set -- "${args[@]}"

#----------------------------------------------------------------------
# 2. drop sendbox support if the binary doesn't have it
#----------------------------------------------------------------------

if [[ ${defs[*]} != *-?NO_SENDBOX ]] && ! "$MUTT" -F/dev/null -Q sendbox &>/dev/null; then
    echo "warning: adding -DNO_SENDBOX" >&2
    defs=( "${defs[@]}" -DNO_SENDBOX )
fi

#----------------------------------------------------------------------
# 3. convert the defs array to an environment variable _MUTT_DEFS which 
#    will be picked up by mutt_conf, called from muttrc
#----------------------------------------------------------------------

if [[ ${#defs[@]} -gt 0 ]]; then
    export _MUTT_DEFS=$(declare -p defs)
else
    unset _MUTT_DEFS
fi

#----------------------------------------------------------------------
# 4. call the mutt binary this script is wrapping
#----------------------------------------------------------------------

for x; do
    if [[ $x == --dumprc ]]; then
        mutt_conf
        exit
    fi
done

# set the xterm title bar
[[ $TERM == xterm* ]] && echo -n "]0;mutt"

exec "$MUTT" "$@"
